{"ast":null,"code":"import axios from'../../interceptors/axios';export var signin=function signin(route,inputs){axios.post(route,inputs,{headers:{'Content-Type':'application/json'},withCredentials:true}).then(function(res){// const accessToken = res.data.token;\n// const user = res.data.user;\nconsole.log(res.data);console.log('User logged In');return res.data;}).catch(function(error){alert('User not found!');console.log(error.message);});};export var signup=function signup(route,inputs){axios.post(route,inputs).then(function(res){if(res.status===201){alert('User was created! Please Sign In');console.log('User created');return;}}).catch(function(error){alert('Email already exists!');console.log(error.message);return;});};// export const signToken = () => {};\nexport var signout=function signout(){axios.post('/auth/signout').then(function(res){alert('User logged Out');console.log('User logged Out');localStorage.clear();});};","map":{"version":3,"names":["axios","signin","route","inputs","post","headers","withCredentials","then","res","console","log","data","catch","error","alert","message","signup","status","signout","localStorage","clear"],"sources":["/home/luismelo/Documents/GitHub/Frontend/src/shared/features/SignServices.ts"],"sourcesContent":["import axios from '../../interceptors/axios';\n\nexport const signin = (route: string, inputs: any) => {\n  axios\n    .post(route, inputs, {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    })\n    .then((res) => {\n      // const accessToken = res.data.token;\n      // const user = res.data.user;\n      console.log(res.data);\n      console.log('User logged In');\n      return res.data;\n    })\n    .catch(function (error) {\n      alert('User not found!');\n      console.log(error.message);\n    });\n};\nexport const signup = (route: string, inputs: any) => {\n  axios\n    .post(route, inputs)\n    .then((res) => {\n      if (res.status === 201) {\n        alert('User was created! Please Sign In');\n        console.log('User created');\n        return;\n      }\n    })\n    .catch(function (error) {\n      alert('Email already exists!');\n      console.log(error.message);\n      return;\n    });\n};\n// export const signToken = () => {};\nexport const signout = () => {\n  axios.post('/auth/signout').then((res) => {\n    alert('User logged Out');\n    console.log('User logged Out');\n    localStorage.clear();\n  });\n};\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,0BAAlB,CAEA,MAAO,IAAMC,OAAM,CAAG,QAATA,OAAS,CAACC,KAAD,CAAgBC,MAAhB,CAAgC,CACpDH,KAAK,CACFI,IADH,CACQF,KADR,CACeC,MADf,CACuB,CACnBE,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CADU,CAEnBC,eAAe,CAAE,IAFE,CADvB,EAKGC,IALH,CAKQ,SAACC,GAAD,CAAS,CACb;AACA;AACAC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EACAF,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA,MAAOF,IAAG,CAACG,IAAX,CACD,CAXH,EAYGC,KAZH,CAYS,SAAUC,KAAV,CAAiB,CACtBC,KAAK,CAAC,iBAAD,CAAL,CACAL,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,OAAlB,EACD,CAfH,EAgBD,CAjBM,CAkBP,MAAO,IAAMC,OAAM,CAAG,QAATA,OAAS,CAACd,KAAD,CAAgBC,MAAhB,CAAgC,CACpDH,KAAK,CACFI,IADH,CACQF,KADR,CACeC,MADf,EAEGI,IAFH,CAEQ,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACS,MAAJ,GAAe,GAAnB,CAAwB,CACtBH,KAAK,CAAC,kCAAD,CAAL,CACAL,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,OACD,CACF,CARH,EASGE,KATH,CASS,SAAUC,KAAV,CAAiB,CACtBC,KAAK,CAAC,uBAAD,CAAL,CACAL,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,OAAlB,EACA,OACD,CAbH,EAcD,CAfM,CAgBP;AACA,MAAO,IAAMG,QAAO,CAAG,QAAVA,QAAU,EAAM,CAC3BlB,KAAK,CAACI,IAAN,CAAW,eAAX,EAA4BG,IAA5B,CAAiC,SAACC,GAAD,CAAS,CACxCM,KAAK,CAAC,iBAAD,CAAL,CACAL,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACAS,YAAY,CAACC,KAAb,GACD,CAJD,EAKD,CANM"},"metadata":{},"sourceType":"module"}